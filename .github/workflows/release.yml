name: Release

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      snapshot:
        type: boolean
        description: Create a snapshot release
        required: false
        default: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout tsgo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Update submodules
        run: git submodule update --init --remote

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: '1.25'
          cache-dependency-path: tsgo/go.sum

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 'lts/*'
          cache: npm
          cache-dependency-path: tsgo/package-lock.json
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        working-directory: tsgo
        run: npm ci

      - name: Build Lib
        working-directory: tsgo
        run: npm exec hereby lib

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Get tsgo Latest Commit SHA
        id: tsgo_commit
        working-directory: tsgo
        run: |
          echo "tsgo_commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "tsgo_commit_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create Tag
        run: git tag ${{ steps.date.outputs.date }}
        if: github.event_name != 'workflow_dispatch'

      - name: Patch Tsgo version
        run: pnpm i && node scripts/tsgo-version.ts

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean --skip=validate ${{ inputs.snapshot && '--snapshot' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TSGO_COMMIT: ${{ steps.tsgo_commit.outputs.tsgo_commit }}
          TSGO_COMMIT_SHORT: ${{ steps.tsgo_commit.outputs.tsgo_commit_short }}

      - name: Release script
        run: node scripts/release.ts
        env:
          TEST_RELEASE: ${{ inputs.snapshot || github.repository == 'sxzz/tsgo-releases-dev' }}

      - name: Publish NPM packages
        run: npm i -g npm && pnpm -r publish --no-git-checks

      - name: Purge WASM cache
        run: node scripts/purge-cache.ts

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: release-artifacts
          path: |
            dist/*.zip
            dist/*.tar.gz
            dist/*.txt
